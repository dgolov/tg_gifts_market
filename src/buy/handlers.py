from aiogram import Dispatcher
from aiogram import types
from aiogram.fsm.context import FSMContext
from config import logger
from src.gifts import BuyGift
from src.buttons import colors_menu, backgrounds_menu, models_menu, patterns_menu, main_menu, cancel_button
from src.patterns import Menu


async def buy_gift_start(message: types.Message, state: FSMContext):
    """ –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–∞—Ä–∫–∞
    """
    await message.answer("üìù –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞:", reply_markup=cancel_button)
    await state.set_state(BuyGift.gift_name)


async def set_gift_name(message: types.Message, state: FSMContext):
    """ –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
    """
    await state.update_data(gift_name=message.text)
    await message.answer(
        text="üì¶ –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –ø–æ–¥–∞—Ä–∫–∞ (–µ—Å–ª–∏ –Ω–µ –≤–∞–∂–Ω–æ, —Å—Ç–∞–≤–∏—Ç–µ -):",
        reply_markup=models_menu
    )
    await state.set_state(BuyGift.gift_model)


async def set_gift_model(message: types.Message, state: FSMContext):
    """ –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ–ª—å –ø–æ–¥–∞—Ä–∫–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–±–æ—Ä —Ñ–æ–Ω–∞
    """
    await state.update_data(gift_model=message.text)
    await message.answer(
        text="üñº –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ–Ω –ø–æ–¥–∞—Ä–∫–∞ (–µ—Å–ª–∏ –Ω–µ –≤–∞–∂–Ω–æ, —Å—Ç–∞–≤–∏—Ç–µ -):",
        reply_markup=backgrounds_menu
    )
    await state.set_state(BuyGift.gift_background)


async def set_gift_background(message: types.Message, state: FSMContext):
    """ –ü–æ–ª—É—á–∞–µ–º —Ü–≤–µ—Ç –ø–æ–¥–∞—Ä–∫–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–∞
    """
    await state.update_data(gift_background=message.text)
    await message.answer(
        text="üé® –í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç –ø–æ–¥–∞—Ä–∫–∞ (–µ—Å–ª–∏ –Ω–µ –≤–∞–∂–Ω–æ, —Å—Ç–∞–≤–∏—Ç–µ -):",
        reply_markup=colors_menu
    )
    await state.set_state(BuyGift.gift_color)


async def set_gift_color(message: types.Message, state: FSMContext):
    """ –ü–æ–ª—É—á–∞–µ–º —Ü–≤–µ—Ç –ø–æ–¥–∞—Ä–∫–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–±–æ—Ä —É–∑–æ—Ä–∞
    """
    await state.update_data(gift_color=message.text)
    await message.answer(
        text="üåü –í—ã–±–µ—Ä–∏—Ç–µ —É–∑–æ—Ä –ø–æ–¥–∞—Ä–∫–∞ (–µ—Å–ª–∏ –Ω–µ –≤–∞–∂–Ω–æ, —Å—Ç–∞–≤–∏—Ç–µ -):",
        reply_markup=patterns_menu
    )
    await state.set_state(BuyGift.gift_pattern)


async def set_gift_pattern(message: types.Message, state: FSMContext):
    """ –ü–æ–ª—É—á–∞–µ–º —É–∑–æ—Ä –ø–æ–¥–∞—Ä–∫–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–±–æ—Ä –Ω–æ–º–µ—Ä–∞
    """
    await state.update_data(gift_pattern=message.text)
    await message.answer(
        text="üî¢ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–¥–∞—Ä–∫–∞ (–µ—Å–ª–∏ –Ω–µ –≤–∞–∂–Ω–æ, —Å—Ç–∞–≤–∏—Ç–µ -):",
        reply_markup=cancel_button
    )
    await state.set_state(BuyGift.gift_number)


async def set_gift_number(message: types.Message, state: FSMContext):
    """ –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –ø–æ–¥–∞—Ä–∫–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    """
    username = message.from_user.username
    user_id = message.from_user.id

    await state.update_data(gift_number=message.text)
    await message.answer("–¢–µ–ø–µ—Ä—å –º—ã –ø–æ–∫–∞–∂–µ–º –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏:", reply_markup=cancel_button)

    data = await state.get_data()
    logger.debug(f"[Handlers] Sell gift final data - {data} from user: {username} (id: {user_id})")

    await state.set_state(BuyGift.show_results)


def register_buy_handlers(dispatcher: Dispatcher):
    dispatcher.message.register(buy_gift_start, lambda msg: msg.text == Menu.BUY_GIFT)
    dispatcher.message.register(set_gift_name, BuyGift.gift_name)
    dispatcher.message.register(set_gift_model, BuyGift.gift_model)
    dispatcher.message.register(set_gift_background, BuyGift.gift_background)
    dispatcher.message.register(set_gift_color, BuyGift.gift_color)
    dispatcher.message.register(set_gift_pattern, BuyGift.gift_pattern)
    dispatcher.message.register(set_gift_number, BuyGift.gift_number)
